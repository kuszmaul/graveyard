%% This BibTeX bibliography file was created using BibDesk.
%% http://bibdesk.sourceforge.net/


%% Created for Michael Bender at 2021-05-27 15:27:35 -0400 


%% Saved with string encoding Unicode (UTF-8) 

@Article{Benford38,
 author = "Frank Benford",
 month = mar,
 year = 1938,
 title = "The Law of Anomalous Numbers",
 journal = {Proceedings of the American Philosophical Society},
 volume = 78,
 number = 4,
 url = {https://www.jstor.org/stable/984802}
 }
 

@InProceedings{BenderKuKu22,
 author = {Michael A. Bender and Bradley C. Kuszmaul and William Kuszmaul},
 title = {Linear Probing Revisited: Tombstones Mark the Death of Primary Clustering},
 booktitle = {62nd Annual Symposium on Foundations of Computer Science (FOCS'2021)},
 month = FEB,
 year = 2022,
 address = {Denver, Colorado, USA},
 pages = {1171--1182},
 doi = {10.1109/FOCS52979.2021.00115}
 }

@Book{TremblaySo84,
  author = 	 {Jean-Paul Tremblay and Paul G. Sorenson},
  title = 	 {An Introduction to Data Structures with Applications},
  publisher = 	 {McGraw-Hill},
  year = 	 1984}

@Article{Morris68,
  author = 	 {Robert Morris},
  title = 	 {Scatter Storage Techniques},
  journal = 	 {\bibcacm},
  year = 	 1968,
  volume = 	 11,
  number = 	 1,
  pages = 	 {38--44},
  month = 	 JAN,
  doi = {10.1145/362851.362882}}

@Misc{Bauer15,
  author = 	 {Daniel Bauer},
  title = 	 {{C}olumbia {COMS W3134}: Data Structures in {J}ava --- {L}ecture 12: Introduction to Hashing},
  url = {http://www.cs.columbia.edu/~bauer/cs3134-f15/slides/w3134-1-lecture12.pdf},
  month = 	 OCT,
  year = 	 2015}

@Misc{Sullivan21,
  author = 	 {David G. Sullivan},
  title = 	 {{H}arvard {CS S-111}: Intensive Introduction to Computer Science Using {J}ava --- Unit 9, Part 4: Hash Tables},
  month = 	 {Summer},
  year = 	 2021,
  url = {https://sites.fas.harvard.edu/~libs111/files/lectures/unit9-4.pdf}}

@Misc{GriesJa14,
  author = 	 {David Gries and Doug James},
  title = 	 {{C}ornell {CS210}: Object-Oriented Programming and Data Structures --- Recitation Week 8: Hashing},
  url            = {https://www.cs.cornell.edu/courses/cs2110/2014fa/recitations/recitation08/HashPresentation.pptx},
  month = 	 {Fall},
  year = 	 2014}

@Misc{Erickson17,
  author = 	 {Jeff Erickson},
  title = 	 {{UIUC CS473}: Algorithms --- {L}ecture 5: Hash Tables},
  year = 	 2017,
  url =          {https://jeffe.cs.illinois.edu/teaching/algorithms/notes/05-hashing.pdf}
}

@Misc{Mount19,
  author = 	 {Dave Mount},
  title = 	 {{UMD CMSC} 420: Data Structures --- Lecture 11: Hashing --- Handling Collisions},
  month = 	 {Spring},
  year = 	 2019,
  url =          {https://www.cs.umd.edu/class/fall2019/cmsc420-0201/Lects/slides-11-hash-collision.pdf}
}

@Misc{DemaineLe05,
  author = 	 {Erik D. Demaine and Charles E. Leiserson},
  title = 	 {{MIT} {6.046J/18.401J}: Introduction to Algorithms -- {L}ecture 7: Hashing {I}},
  url =          {https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-046j-introduction-to-algorithms-sma-5503-fall-2005/video-lectures/lecture-7-hashing-hash-functions/lec7.pdf},
  month = 	 OCT,
  year = 	 2005}

@Misc{Demaine12-6897-lecture10,
  author = 	 {Erik Demaine},
  title = 	 {{MIT} 6.897: Advanced Data Structures -- {L}ecture 10},
  url =          {https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-851-advanced-data-structures-spring-2012/calendar-and-notes/MIT6_851S12_L10.pdf},
  month = 	 {Spring},
  year = 	 2012}

@Misc{Fisher01,
  author = 	 {Gene Fisher},
  title = 	 {{CalPoly CSC103}: Fundamentals of Computer Science -- Hashing},
  url =          {http://users.csc.calpoly.edu/~gfisher/classes/103/lectures/week5.2.html},
  year = 	 2001}

@Misc{Schwarz21,
  author = 	 {Keith Schwarz},
  title = 	 {{S}tanford {CS166}: Data Structures --- Linear Probing},
  url =          {http://web.stanford.edu/class/archive/cs/cs166/cs166.1166/lectures/12/Small12.pdf},
  month = 	 {Spring},
  year = 	 2021}

@Misc{Mitra21,
  author = 	 {Shyamal Mitra},
  title = 	 {{UT CS 313E}: Elements of Software Design --- Hashing},
  month = 	 {Spring},
  year = 	 2021,
  url =          {https://www.cs.utexas.edu/~mitra/csSpring2021/cs313/lectures/hash.html}
}

@Misc{deGreef17,
  author = 	 {Lilian {de Greef}},
  title = 	 {{UW CSE 373}: Data Structures and Algorithims --- {L}ecture 7: Hash Table Collisions},
  month = 	 {Summer},
  year = 	 2017,
  url =          {https://courses.cs.washington.edu/courses/cse373/17su/lectures/Lecture%2007%20-%20Hash%20Table%20Collisions.pdf}
}

@Misc{Kesden07,
  author = 	 {Gregory Kesden},
  title = 	 {{CMU} 15-310: System-Level Software Development --- Hashing Review},
  url = {https://www.andrew.cmu.edu/course/15-310/applications/ln/hashing-review.html},
  year = 	 2007,
  note = 	 {Accessed 31-May-2021}}

@Book{GoodrichTa15,
  author = 	 {Michael T. Goodrich and Roberto Tamassia},
  title = 	 {Algorithm Design and Applications},
  publisher = 	 {Wiley},
  year = 	 2015,
  address = 	 {Hoboken, New Jersey, USA}}

@article{BenderFaJo12,
	author = {Bender, Michael A. and Farach-Colton, Martin and Johnson, Rob and Russell Kaner and Kuszmaul, Bradley C. and Medjedovic, Dzejla and Montes, Pablo and Shetty, Pradeep and Spillane, Richard P. and Zadok, Erez},
	date-added = {2021-05-26 17:40:44 -0400},
	date-modified = {2021-05-26 17:40:44 -0400},
	journal = {Proceedings of the VLDB Endowment},
	title = {Don't Thrash: How to Cache Your Hash on Flash},
	doi = {10.14778/2350229.2350275},
	volume = 5,
	number = 11,
        pages = {1627--1637},
	year = 2012}

@inproceedings{EinzigerFr16,
	abstract = {Counting Bloom filters (CBF) and their variants are data structures that support membership or multiplicity queries with a low probabilistic error. Yet, they incur a significant memory space overhead when compared to lower bounds as well as to (plain) Bloom filters, which can only represent set membership without removals.This work presents TinyTable, an efficient hash table based algorithm that supports membership queries, removals and multiplicity queries (statistics). TinyTable improves space efficiency by as much as 28\% compared to CBF variants and as much as 60\% for monitoring flow statistics. When the required false positive rate is smaller than 1\%, TinyTable is even slightly more space efficient than (plain) Bloom filters. Our performance study shows that TinyTable has acceptable runtime overheads.},
	articleno = {27},
	author = {Einziger, Gil and Friedman, Roy},
	booktitle = {Proceedings of the 17th International Conference on Distributed Computing and Networking (ICDCN '16)},
	date-added = {2021-05-26 17:40:28 -0400},
	date-modified = {2021-05-26 17:40:28 -0400},
	doi = {10.1145/2833312.2833449},
	isbn = {9781450340328},
	keywords = {hash tables, approximate counting, counting bloom filter},
	address = {Singapore, Singapore},
	numpages = {10},
	title = {Counting with {T}iny{T}able: Every Bit Counts!},
	pages = {27:1--27:10},
	url = {https://doi.org/10.1145/2833312.2833449},
	month = {4--7~} # JAN,
	year = {2016},
	Bdsk-Url-1 = {https://doi.org/10.1145/2833312.2833449}}

@inproceedings{DillingerMa09,
	abstract = {Existing techniques for approximate storage of visited states in a model checker are too special-purpose and too DRAM-intensive. Bitstate hashing, based on Bloom filters, is good for exploring most of very large state spaces, and hash compaction is good for high-assurance verification of more tractable problems. We describe a scheme that is good at both, because it adapts at run time to the number of states visited. It does this within a fixed memory space and with remarkable speed and accuracy. In many cases, it is faster than existing techniques, because it only ever requires one random access to main memory per operation; existing techniques require several to have good accuracy. Adapting to accommodate more states happens in place using streaming access to memory; traditional rehashing would require extra space, random memory accesses, and hash computation. The structure can also incorporate search stack matching for partial-order reductions, saving the need for extra resources dedicated to an additional structure. Our scheme is wellsuited for a future in which random accesses to memory are more of a limiting factor than the size of memory.},
	address = {Berlin, Heidelberg},
	author = {Dillinger, Peter C. and Manolios, Panagiotis (Pete)},
	booktitle = {Proceedings of the 16th International SPIN Workshop on Model Checking Software},
	date-added = {2021-05-26 17:40:13 -0400},
	date-modified = {2021-05-26 17:40:13 -0400},
	doi = {10.1007/978-3-642-02652-2_6},
	isbn = {9783642026515},
	location = {Grenoble, France},
	numpages = {20},
	pages = {12--31},
	publisher = {Springer-Verlag},
	title = {Fast, All-Purpose State Storage},
	url = {https://doi.org/10.1007/978-3-642-02652-2_6},
	year = {2009},
	Bdsk-Url-1 = {https://doi.org/10.1007/978-3-642-02652-2_6}}

@inproceedings{PaghPR05,
	author = {Pagh, Anna and Pagh, Rasmus and Rao, S Srinivasa},
	booktitle = {Proceedings of the sixteenth annual ACM-SIAM symposium on Discrete algorithms},
	date-added = {2021-05-26 17:39:48 -0400},
	date-modified = {2021-05-26 17:39:48 -0400},
	organization = {Society for Industrial and Applied Mathematics},
	pages = {823--829},
	title = {An optimal {Bloom} filter replacement},
	year = {2005}}

@inproceedings{BonomiMiPa06,
	author = {Bonomi, Flavio and Mitzenmacher, Michael and Panigrahy, Rina and Singh, Sushil and Varghese, George},
	booktitle = {Proceedings of the 14th European Symposium on Algorithms (ESA 2006)},
	date-added = {2021-05-26 17:39:17 -0400},
	date-modified = {2021-05-26 17:39:17 -0400},
	pages = {684--695},
	title = {An improved construction for counting {B}loom filters},
	month = {11--13~} # SEP,
	year = {2006},
	address = {Zurich, Switzerland},
	doi = {10.1007/11841036_61}}

@article{FanCaAl00,
	author = {Fan, Li and Cao, Pei and Almeida, Jussara and Broder, Andrei Z},
	date-added = {2021-05-26 17:39:08 -0400},
	date-modified = {2021-05-26 17:39:08 -0400},
	journal = {IEEE/ACM Transactions on Networking},
	number = 3,
	pages = {281--293},
	title = {Summary Cache: A Scalable Wide-Area Web Cache Sharing Protocol},
	volume = 8,
	month = JUN,
	year = 2000}

@article{AlmeidaBaPr07,
	author = {Almeida, Paulo S{\'e}rgio and Baquero, Carlos and Pregui{\c{c}}a, Nuno and Hutchison, David},
	date-added = {2021-05-26 17:38:42 -0400},
	date-modified = {2021-05-26 17:38:42 -0400},
	journal = {Journal of Information Processing Letters},
	pages = {255--261},
	title = {Scalable {B}loom filters},
	volume = 101,
	number = 6,
	month = MAR,
	year = 2007,
	doi = {10.1016/j.ipl.2006.10.007}}

@inproceedings{DebnathSeLi11,
	author = {Debnath, Biplob and Sengupta, Sudipta and Li, Jin and Lilja, David J and Du, David HC},
	booktitle = {Proceedings of the 31st International Conference on Distributed Computing Systems (ICDCS)},
	date-added = {2021-05-26 17:38:22 -0400},
	date-modified = {2021-05-26 17:38:22 -0400},
	pages = {635--644},
	title = {{BloomFlash}: {B}loom filter on flash-based storage},
	month = {20--24~} # JUN,
	year = 2011,
	doi = {10.1109/ICDCS.2011.44},
        address = {Minneapolis, Minnesota, USA},
	}

@book{DrozdekSi95,
    title = "Data Structures in C",
    author = "Adam Drozdek and Donald L. Simon",
    year = 1995,
    publisher = "PWS",
    address = "Boston, Massachusetts, USA"
}

@inproceedings{CanimMiBh10,
	author = {Canim, Mustafa and Mihaila, George A and Bhattacharjee, Bishwaranjan and Lang, Christian A and Ross, Kenneth A},
	booktitle = {Proceedings of the International Workshop on Accelerating Analytics and Data Management Systems Using Modern Processor and Storage Architectures (ADMS2010) (Part of VLDB)},
	date-added = {2021-05-26 17:38:11 -0400},
	date-modified = {2021-05-26 17:38:11 -0400},
	pages = {1--8},
	title = {Buffered {Bloom} Filters on Solid State Storage.},
	url = {http://www.vldb.org/archives/workshop/2010/proceedings/files/vldb_2010_workshop/ADMS_2010/adms10-canim.pdf},
	month = {13~} # SEP,
	year = {2010},
	address = {Singapore}}

@inproceedings{LuDeDu11,
	author = {Lu, Guanlin and Debnath, Biplob and Du, David H.C.},
	booktitle = {Proceedings of the 27th Symposium on Mass Storage Systems and Technologies (MSST)},
	date-added = {2021-05-26 17:37:51 -0400},
	date-modified = {2021-05-26 17:37:51 -0400},
	pages = {1--6},
	title = {A Forest-structured {Bloom} Filter with flash memory},
	month = {23--27~} # MAY,
	year = 2011,
	address = {Denver, Colorado, USA},
	doi = {10.1109/MSST.2011.5937232}}

@inproceedings{PutzeSaSi07,
	author = {Putze, Felix and Sanders, Peter and Singler, Johannes},
	booktitle = {Sixth International Workshop on Experimental and Efficient Algorithms (WEA 2007)},
	date-added = {2021-05-26 17:37:42 -0400},
	date-modified = {2021-05-26 17:37:42 -0400},
	pages = {108--121},
	title = {Cache-, Hash- and Space-Efficient {B}loom Filters},
	month = {6--8~} # JUN,
	year = {2007},
	address = {Rome, Italy},
	series = {Lecture Notes in Computer Science},
	publisher = {Springer},
	volume = 4525}

@article{QiaoLiCh14,
	author = {Qiao, Yan and Li, Tao and Chen, Shigang},
	date-added = {2021-05-26 17:37:33 -0400},
	date-modified = {2021-05-26 17:37:33 -0400},
	journal = {IEEE Transactions on Parallel and Distributed Systems (TPDS)},
	number = {1},
	pages = {93--103},
	publisher = {IEEE},
	title = {Fast {Bloom} Filters and Their Generalization},
	volume = {25},
	month = JAN,
	year = {2014},
	doi = {10.1109/TPDS.2013.46}}

@inproceedings{BenderFaJo11,
	annote = {C55},
	author = {Michael A. Bender and Martin Farach-Colton and Rob Johnson and Bradley C. Kuszmaul and Dzejla Medjedovic and Pablo Montes and Pradeep Shetty and Richard P. Spillane and Erez Zadok},
	booktitle = {Proc.\ 3rd USENIX Workshop on Hot Topics in Storage (HotStorage)},
	date-added = {2021-05-26 16:06:45 -0400},
	date-modified = {2021-05-26 16:06:45 -0400},
	location = {Portland, OR, USA},
	month = {June},
	title = {Don't Thrash: How to Cache your Hash on Flash},
	year = {2011}}

@inproceedings{CarterFG78,
	author = {Carter, Larry and Floyd, Robert and Gill, John and Markowsky, George and Wegman, Mark},
	booktitle = {Proceedings of the tenth annual ACM symposium on Theory of computing},
	date-added = {2021-05-26 16:06:06 -0400},
	date-modified = {2021-05-26 16:06:06 -0400},
	pages = {59--65},
	title = {Exact and approximate membership testers},
	year = {1978}}

@article{BreslowJ18,
	author = {Breslow, Alex D and Jayasena, Nuwan S},
	date-added = {2021-05-26 16:05:57 -0400},
	date-modified = {2021-05-26 16:05:57 -0400},
	journal = {Proceedings of the VLDB Endowment},
	number = 9,
	pages = {1041--1055},
	publisher = {VLDB Endowment},
	title = {Morton filters: faster, space-efficient cuckoo filters via biasing, compression, and decoupled logical sparsity},
	volume = 11,
	year = 2018,
	url = {https://www.vldb.org/pvldb/vol11/p1041-breslow.pdf}}

@inproceedings{FanAnKa14,
	author = {Fan, Bin and Andersen, Dave G and Kaminsky, Michael and Mitzenmacher, Michael D},
	booktitle = {Proceedings of the 10th ACM International on Conference on Emerging Networking Experiments and Technologies (CoNEXT'14)},
	date-added = {2021-05-26 16:04:48 -0400},
	date-modified = {2021-05-26 16:04:48 -0400},
	pages = {75--88},
	title = {Cuckoo Filter: Practically Better Than {Bloom}},
	doi = {10.1145/2674005.2674994},
	address = {Sidney, Australia},
	month = {2--5~} # DEC,
	year = {2014}}

@inproceedings{PandeyBeJo17,
	author = {Pandey, Prashant and Bender, Michael A and Johnson, Rob and Patro, Rob},
	booktitle = {Proceedings of the 2017 ACM SIGMOD International Conference on Management of Data (SIGMOD'17)},
	date-added = {2021-05-26 16:04:23 -0400},
	date-modified = {2021-05-26 16:04:23 -0400},
	pages = {775--787},
	title = {A General-Purpose Counting Filter: Making Every Bit Count},
	doi = {10.1145/3035918.3035963},
	address = {Chicago, Illinois, USA},
	month = {14--19~} # MAY,
	year = 2017}

@misc{bloom,
	author = {Arash Partow},
	date-added = {2021-05-26 16:03:59 -0400},
	date-modified = {2021-05-26 16:03:59 -0400},
	howpublished = {\url{https://code.google.com/p/bloom/}},
	note = {[Online; accessed 19-July-2014]},
	title = {{C++} {Bloom} Filter Library}}

@article{Bloom70,
	author = {Burton H. Bloom},
	date-added = {2021-05-26 16:03:59 -0400},
	date-modified = {2021-05-26 16:03:59 -0400},
	journal = {Communications of the ACM},
	number = 7,
	pages = {422--426},
	title = {Space/Time Trade-offs in Hash Coding With Allowable Errors},
	volume = 13,
	month = JUN,
	year = 1970,
	doi = {10.1145/362686.362692}}



@Misc{GoyalFaLi23,
 key       = {},
 author    = {Manu Goyal and Bin Fan and Xiaozhou Li and David G. Anderson and Michael Kaminsky},
 title     = {libcuckoo},
 url       = {github.com/efficient/libcuckoo},
 year      = {2023},
 note       = {Accessed: 2023-04-18},
}

@inproceedings{LiAnKa14,
	author = {Li, Xiaozhou and Andersen, David G and Kaminsky, Michael and Freedman, Michael J},
	booktitle = {Proceedings of the Ninth European Conference on Computer Systems (EuroSys'14)},
	date-added = {2021-05-25 08:46:13 -0400},
	date-modified = {2021-05-25 08:46:35 -0400},
	pages = {27:1--27:14},
	title = {Algorithmic improvements for fast concurrent cuckoo hashing},
	doi = {10.1145/2592798.2592820},
	month = {14--16~} # APR,
	year = 2014,
	address = {Amsterdam, The Netherlands}}

@misc{GoodrichHiMi11,
	author = {Goodrich, Michael T and Hirschberg, Daniel S and Mitzenmacher, Michael and Thaler, Justin},
	howpublished = {\href{https://arxiv.org/abs/1107.4378}{arXiv:1107.4378}},
	month = JUL,
	title = {Fully de-amortized cuckoo hashing for cache-oblivious dictionaries and multimaps},
	year = {2011}}

@inproceedings{GoodrichHiMi12,
	author = {Goodrich, Michael T and Hirschberg, Daniel S and Mitzenmacher, Michael and Thaler, Justin},
	booktitle = {First Mediterranean Conference on Algorithms (MedAlg 2012)},
	series = {Lecture Notes in Computer Science},
       	publisher = {Springer},
	volume = 7659,
	pages = {203--218},
	title = {Cache-Oblivious Dictionaries and Multimaps with Negligible Failure Probability},
	doi = {10.1007/978-3-642-34862-4_15},
	address = {Kibbutz Ein Gedi, Israel},
	month = {3--5~} # DEC,
	Year = 2012}

@inproceedings{ConwayFaSh18,
	author = {Alexander Conway and Mart{\'\i}n Farach{-}Colton and Philip Shilane},
	booktitle = {Proceedings 45th International Colloquium on Automata, Languages, and Programming (ICALP 2018)},
	doi = {10.4230/LIPIcs.ICALP.2018.39},
	pages = {39:1--39:14},
	publisher-skip = {Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik},
	series = {Leibniz International Proceedings in Informatics (LIPIcs)},
	title = {Optimal Hashing in External Memory},
	volume = {107},
	month = {9--13~} # JUL,
	year = {2018},
	address = {Prague, Czech Republic},
	Bdsk-Url-1 = {https://doi.org/10.4230/LIPIcs.ICALP.2018.39}}

@article{AmbleKn74,
	author = {Amble, Ole and Knuth, Donald Ervin},
	doi = {10.1093/comjnl/17.2.135},
	journal = {The Computer Journal},
	month = JAN,
	number = 2,
	pages = {135--142},
	publisher = {Oxford University Press},
	title = {Ordered hash tables},
	volume = 17,
	year = 1974,
	Bdsk-Url-1 = {https://doi.org/10.1093/comjnl/17.2.135}}

@misc{AttractiveChaos19,
	author = {{Attractive Chaos Blog}},
	date-added = {2021-05-23 07:34:51 -0400},
	date-modified = {2021-05-23 07:36:36 -0400},
	month = DEC,
	note = {Accessed 22-May-2021},
	title = {Deletion from hash tables without tombstones},
	url = {https://attractivechaos.wordpress.com/2019/12/28/deletion-from-hash-tables-without-tombstones/},
	year = 2019,
	Bdsk-Url-1 = {https://attractivechaos.wordpress.com/2019/12/28/deletion-from-hash-tables-without-tombstones/}}

@misc{BronsonSh19,
	author = {Nathan Bronson and Xiao Shi},
	bibnote = {Was F14},
	month = {25~} # APR,
	note = {Accessed: 2020-11-06},
	title = {Open-sourcing {F14} for Faster, More Memory-efficient Hash Tables},
	url = {https://engineering.fb.com/2019/04/25/developer-tools/f14/},
	year = 2019,
	Bdsk-Url-1 = {https://engineering.fb.com/2019/04/25/developer-tools/f14/}}

@article{GunjiGo80,
	author = {Takao Gunji and Eiichi Goto},
	date-added = {2021-05-23 09:10:02 -0400},
	date-modified = {2021-05-23 09:16:51 -0400},
	journal = {J. Information Proc.},
	pages = {1-12},
	title = {xxxx},
	year = {1980}}

@book{Kruse84,
	address = {Englewood Cliffs, New Jersey, USA},
	author = {Robert L. Kruse},
	publisher = {Prentice-Hall Inc},
	title = {Data Structures and Program Design},
	year = 1984}

@article{HopgoodDa72,
	abstract = {{A number of recent papers have considered the quadratic hash method when the table size is a prime number. This paper shows that, contrary to what is normally assumed, the method can be used for tables whose size is a power of 2 without the usual drawback that the period of search is significantly less than the table size.}},
	bibnote = {Ahtors gave initials, not full names},
	author-full = {F. Robert A. Hopgood and James H. Davenport},
	author = {F. R. A. Hopgood and J. Davenport},
	bibnote = {was quadratic72},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/journals/cj/HopgoodD72.bib},
	doi = {10.1093/comjnl/15.4.314},
	journal = {The Computer Journal},
	number = 4,
	pages = {314--315},
	timestamp = {Mon, 17 Aug 2020 16:23:59 +0200},
	title = {The quadratic hash method when the table size is a power of 2},
	url = {https://doi.org/10.1093/comjnl/15.4.314},
	volume = 15,
	year = 1972,
	Bdsk-Url-1 = {https://doi.org/10.1093/comjnl/15.4.314}}

@book{LewisDe91,
	address = {New York, New York, USA},
	author = {Harry R. Lewis and Larry Denenberg},
	publisher = {HarperCollins Publishers},
	title = {Data Structures and Their Algorithms},
	year = 1991}

@book{MainSa01,
	address = {Boston, Massachusetts, USA},
	author = {Michael Main and Walter Savitch},
	publisher = {Addison-Wesley},
	title = {Data Structures and Other Objects Using C++},
	year = 2001}

@book{McMillan14,
	address = {Sebastopol, California, USA},
	author = {Michael McMillan},
	publisher = {O'Reilly},
	title = {Data Structures and Algorithms with JavaScript},
	year = 2014}

@inproceedings{NewellSh57,
	address = {Los Angeles, California, USA},
	author = {A. Newell and J. C. Shaw},
	booktitle = {Proceedings of the Western Joint Computer Conference: Techniques for Reliability},
	month = {26--28~} # feb,
	title = {Programming the {L}ogic {T}heory {M}achine},
	year = 1957,
	doi = {10.1145/1455567.1455606}}

@article{NewellSi56,
	author = {Allen Newell and Herbert A. Simon},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/journals/tit/NewellS56.bib},
	doi = {10.1109/TIT.1956.1056797},
	journal = {{IRE} Transactions on Information Theory},
	number = 3,
	pages = {61--79},
	timestamp = {Mon, 18 May 2020 12:42:13 +0200},
	title = {The logic theory machine---A complex information processing system},
	url = {https://doi.org/10.1109/TIT.1956.1056797},
	volume = 2,
	month = SEP,
	year = 1956,
	Bdsk-Url-1 = {https://doi.org/10.1109/TIT.1956.1056797}}

@inproceedings{PaghRo01,
	author = {Pagh, Rasmus and Rodler, Flemming Friche},
	booktitle = {Proceedings of the 9th European Symposium on Algorithms (ESA 2001)},
	date-added = {2021-05-25 08:48:42 -0400},
	date-modified = {2021-05-25 08:48:56 -0400},
	organization = {Springer},
	pages = {121--133},
	title = {Cuckoo hashing},
	address = {University of Aaarhus, Denmark},
	doi = {10.1007/3-540-44676-1_10},
	month = {28--31~} # AUG,
	series = {Lecture Notes in Computer Science},
	volume = 2161,
	year = 2001}

@book{Sedgewick83,
	address = {Reading, Massachusetts, USA},
	author = {Robert Sedgewick},
	publisher = {Addison-Wesley},
	title = {Algorithms},
	year = 1983}

@book{Sedgewick90,
	address = {Reading, Massachusetts, USA},
	author = {Robert Sedgewick},
	publisher = {Addison-Wesley},
	title = {Algorithms in C},
	year = 1990}

@book{Smith04,
	author = {Smith, Peter},
	date-added = {2021-05-22 22:22:57 -0400},
	date-modified = {2021-05-22 22:24:50 -0400},
	isbm = {ISBN 9780763725624},
	pages = {pages 186-188},
	publisher = {Jones \& Bartlett Learning},
	title = {Applied Data Structures with {C++}},
	year = {2004}}

@book{Standish95,
	address = {Reading, Massachusetts, USA},
	author = {Thomas A. Standish},
	publisher = {Addision-Wesley},
	title = {Data Structures, Algorithms, and Software Principles in C},
	year = 1995}

@book{Weiss00,
	address = {Reading, Massachusetts, USA},
	author = {Mark Allen Weiss},
	publisher = {Addison-Wesley},
	title = {Data Structures and Problem Solving using C++},
	year = 2000}

@book{Wengrow17,
	author = {Jay Wengrow},
	publisher = {The Pragmatic Programmers},
	title = {A Common-Sense Guide to Data Structures and Algorithms},
	year = 2017}

@Misc{WikipediaLinearProbing,
  title = 	 {Linear Probing},
  author =       {{Wikipedia contributors}},
  url =          {https://en.wikipedia.org/wiki/Lienar_probing},
  year = 	 2021,
  note = 	 {Accessed 31-May-2021}}

@Misc{WikipediaDoubleHashing,
  title = 	 {Double Hashing},
  author =       {{Wikipedia contributors}},
  url = {https://en.wikipedia.org/wiki/Double_hashing},
  year = 	 2021,
  note = 	 {Accessed 31-May-2021}}

@Misc{WikipediaQuadraticProbing,
  title = 	 {Quadratic Probing},
  author =       {{Wikipedia contributors}},
  url = {https://en.wikipedia.org/wiki/Quadratic_probing},
  year = 	 2021,
  note = 	 {Accessed 31-May-2021}}

@misc{WikipediaLinkedList,
	author = {{Wikipedia contributors}},
	date-added = {2021-05-22 22:00:26 -0400},
	date-modified = {2021-05-22 22:00:26 -0400},
	url = {https://en.wikipedia.org/wiki/Linked_list},
	note = {Accessed 22-May-2021},
	title = {Linked List},
	year = 2021,
	Bdsk-Url-1 = {https://en.wikipedia.org/wiki/Linked_list}}

@misc{WikipediaPrimaryClustering,
	author = {{Wikipedia contributors}},
	date-modified = {2021-05-22 22:01:19 -0400},
	note = {Accessed 22-May-2021},
	title = {Primary clustering},
	url = {https://en.wikipedia.org/wiki/Primary_clustering},
	year = 2021,
	Bdsk-Url-1 = {https://en.wikipedia.org/wiki/Linked_list},
	Bdsk-Url-2 = {https://en.wikipedia.org/wiki/Primary_clustering}}

@book{Wirth76,
	address = {Englewood Cliffs, New Jersey, USA},
	author = {Niklaus Wirth},
	publisher = {Prentice-Hall, Inc.},
	title = {Algorithms + Data Structures = Programs},
	year = 1976}

@book{Wirth86,
	address = {Englewood Cliffs, New Jersey, USA},
	author = {Niklaus Wirth},
	publisher = {Prentice-Hall, Inc.},
	title = {Algorithms and Data Structures},
	year = 1986}

@misc{Knuth63,
	author = {Don Knuth},
	title = {Notes on ``Open'' Addressing},
	year = {1963}}

@article{Peterson57,
	author = {Peterson, W. W.},
	doi = {10.1147/rd.12.0130},
	journal = {IBM Journal of Research and Development},
        volume = 1,
	number = 2,
	pages = {130-146},
	title = {Addressing for Random-Access Storage},
	month = APR,
	year = 1957,
	Bdsk-Url-1 = {https://doi.org/10.1147/rd.12.0130}}

@article{Maurer83,
        bibnote = "Don't cite this.  Cite Maurer68",
	abstract = {Introduced is a hash coding method based on fixed-point division rather than multiplication or logical operations. This new method allows the hash table to have almost any length. Also a new method of handling collisions is discussed. Known as quadratic search, this method is faster than random search and free from the ``clusters'' that build up with a linear search.},
	address = {New York, New York, USA},
	author = {Maurer, W. D.},
	date-modified = {2021-05-11 19:54:26 -0400},
	doi = {10.1145/357980.357995},
	issn = {0001-0782},
	issue_date = {Jan. 1983},
	journal = {Commun. ACM},
	keywords = {searching, scatter storage, hash code, hash table},
	month = jan,
	number = {1},
	numpages = {3},
	pages = {36--38},
	publisher = {Association for Computing Machinery},
	title = {An Improved Hash Code for Scatter Storage},
	url = {https://doi.org/10.1145/357980.357995},
	volume = {26},
	year = {1983},
	Bdsk-Url-1 = {https://doi.org/10.1145/357980.357995}}

@article{Maurer68,
	author = {W. D. Maurer},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/journals/cacm/Maurer68.bib},
	doi = {10.1145/362851.362880},
	journal = {\bibcacm},
	number = 1,
	pages = {35--38},
	timestamp = {Tue, 06 Nov 2018 12:51:42 +0100},
	title = {An Improved Hash Code for Scatter Storage},
	url = {https://doi.org/10.1145/362851.362880},
	volume = 11,
	year = 1968,
	Bdsk-Url-1 = {https://doi.org/10.1145/362851.362880}}

@book{Knuth97Vol1,
	author = {Donald Ervin Knuth},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/books/lib/Knuth97.bib},
	isbn = 0201896834,
	publisher = {Addison-Wesley},
	timestamp = {Fri, 17 Jul 2020 16:12:39 +0200},
	title = {The Art of Computer Programming, Volume I: Fundamental Algorithms},
	edition = {3rd},
	url = {https://www.worldcat.org/oclc/312910844},
	year = 1997,
	Bdsk-Url-1 = {https://www.worldcat.org/oclc/312910844}}

@book{Knuth98Vol3,
	author = {Donald Ervin Knuth},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/books/lib/Knuth98a.bib},
	isbn = 0201896850,
	publisher = {Addison-Wesley},
	timestamp = {Fri, 17 Jul 2020 16:12:39 +0200},
	title = {The Art of Computer Programming, Volume III: Sorting and Searching},
	edition = {2nd},
	url = {https://www.worldcat.org/oclc/312994415},
	year = 1998,
	Bdsk-Url-1 = {https://www.worldcat.org/oclc/312994415}}

@article{KonheimWe66,
	author = {Konheim, Alan G. and Weiss, Benjamin},
	doi = {10.1137/0114101},
	journal = {SIAM Journal on Applied Mathematics},
	number = 6,
	pages = {1266-1274},
	title = {An Occupancy Discipline and Applications},
	url = {https://doi.org/10.1137/0114101},
	volume = 14,
	year = 1966,
	month = NOV,
	Bdsk-Url-1 = {https://doi.org/10.1137/0114101}}

@inproceedings{ViolaPo96,
	author = {Alfredo Viola and Patricio V. Poblete},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/conf/esa/ViolaP96.bib},
	booktitle = {Algorithms --- ESA '96, Fourth Annual European Symposium},
	doi = {10.1007/3-540-61680-2_58},
	pages = {221--233},
	publisher = {Springer},
	series = {Lecture Notes in Computer Science},
	timestamp = {Tue, 14 May 2019 10:00:54 +0200},
	title = {The Analysis of Linear Probing Hashing with Buckets (Extended Abstract)},
	volume = 1136,
	year = 1996,
	Bdsk-Url-1 = {https://doi.org/10.1007/3-540-61680-2%5C_58}}

@article{Viola05,
	author = {Viola, Alfredo},
	journal = {ACM Transactions on Algorithms (TALG)},
	number = 2,
	pages = {214--242},
	title = {Exact distribution of individual displacements in linear probing hashing},
	volume = 1,
	month = OCT,
	year = 2005,
	doi = {10.1145/1103963.1103965},
	}

@article{FlajoletPoVi98,
	author = {Flajolet, Philippe and Poblete, Patricio and Viola, Alfredo},
	doi = {10.1007/PL00009236},
	journal = {Algorithmica},
	month = DEC,
	pages = {490--515},
	title = {On the Analysis of Linear Probing Hashing},
	volume = 22,
	number = 4,
	year = 1998,
	Bdsk-Url-1 = {https://doi.org/10.1007/PL00009236}}

@article{Viola10,
	author = {Viola, Alfredo},
	journal = {Discrete Mathematics and Theoretical Computer Science (DMTCS)},
	month = JAN,
	title = {Distributional Analysis of the Parking Problem and {Robin Hood } Linear Probing Hashing with Buckets},
	volume = {12},
	url = {https://dmtcs.episciences.org/519},
        number = 2,
	year = {2010}}

@article{PobleteMu89,
	abstract = {We introduce a new heuristic for resolving collisions in open addressing hash tables, last-come-first-served hashing. The analysis shows that its expected search time is the same as that of the standard method, but its variance is much smaller. This makes the search algorithm much more reliable, and it may also be used to conduct a mode-centered search, further decreasing the search time.},
	author = {Patricio V Poblete and J {Ian Munro}},
	doi = {https://doi.org/10.1016/0196-6774(89)90014-X},
	issn = {0196-6774},
	journal = {Journal of Algorithms},
	number = {2},
	pages = {228-248},
	title = {Last-come-first-served hashing},
	url = {https://www.sciencedirect.com/science/article/pii/019667748990014X},
	volume = {10},
	year = {1989},
	Bdsk-Url-1 = {https://www.sciencedirect.com/science/article/pii/019667748990014X},
	Bdsk-Url-2 = {https://doi.org/10.1016/0196-6774(89)90014-X}}

@article{MendelsonYe80,
	author = {Mendelson, Haim and Yechiali, Uri},
	doi = {10.1145/322203.322209},
	journal = {Journal of the ACM},
	month = JUL,
	pages = {474--483},
	title = {A New Approach to the Analysis of Linear Probing Schemes},
	volume = 27,
	number = 3,
	year = 1980,
	Bdsk-Url-1 = {https://doi.org/10.1145/322203.322209}}

@inproceedings{CelisLaMu85,
	author = {Pedro Celis and Per{-}{\AA}ke Larson and J. Ian Munro},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/conf/focs/CelisLM85.bib},
	booktitle = {26th Annual Symposium on Foundations of Computer Science (FOCS'85)},
	doi = {10.1109/SFCS.1985.48},
	pages = {281--288},
	timestamp = {Wed, 16 Oct 2019 14:14:54 +0200},
	title = {{Robin Hood} Hashing (Preliminary Report)},
	url = {https://doi.org/10.1109/SFCS.1985.48},
        month = {21--23~} # OCT,
	year = {1985},
	address = {Portland, Oregon, USA},
	Bdsk-Url-1 = {https://doi.org/10.1109/SFCS.1985.48}}

@article{CelisFr92,
	author = {Pedro Celis and John V. Franco},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/journals/isci/CelisF92.bib},
	doi = {10.1016/0020-0255(92)90022-Z},
	journal = {\bibinfsci},
	month = JAN,
	number = {1-2},
	pages = {13--26},
	timestamp = {Sat, 27 May 2017 14:24:48 +0200},
	title = {The analysis of hashing with lazy deletions},
	volume = {62},
	year = {1992},
	Bdsk-Url-1 = {https://doi.org/10.1016/0020-0255(92)90022-Z}}

@inproceedings{JimenezMa18,
	author = {Rosa M. Jim{\'{e}}nez and Conrado Mart{\'{\i}}nez},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/conf/analco/JimenezM18.bib},
	booktitle = {Proceedings of the Fifteenth Workshop on Analytic Algorithmics and Combinatorics (ANALCO)},
	doi = {10.1137/1.9781611975062.3},
	pages = {23--31},
	publisher = {{SIAM}},
	timestamp = {Thu, 04 Jan 2018 14:15:47 +0100},
	title = {On Deletions in Open Addressing Hashing},
	url = {https://doi.org/10.1137/1.9781611975062.3},
	month = {8--9~} # JAN,
	year = 2018,
	address = {New Orleans, Louisana, USA},
	Bdsk-Url-1 = {https://doi.org/10.1137/1.9781611975062.3}}

@article{Stevens18,
	author = {Hallam Stevens},
	date-modified = {2021-05-22 15:25:41 -0400},
	journal = {{IEEE} Spectrum},
	number = {2},
	pages = {44--49},
	title = {{Hans Peter Luhn} and the birth of the hashing algorithm},
	volume = {55},
	year = {2018}}

@misc{Abseil17,
	date-modified = {2021-05-25 08:45:38 -0400},
	key = {Abseil},
	note = {Accessed: 2020-11-06},
	title = {Abseil},
	url = {https://abseil.io/},
	year = 2017,
	Bdsk-Url-1 = {https://abseil.io/}}

@article{GuibasSz78,
        bibnote = "Leo not Leonidas in the article",
	author = {Leo J. Guibas and Endre Szemer{\'{e}}di},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/journals/jcss/GuibasS78.bib},
	doi = {10.1016/0022-0000(78)90046-6},
	journal = {Journal of Computer and System Sciences},
	number = 2,
	pages = {226--274},
	timestamp = {Tue, 16 Feb 2021 14:04:36 +0100},
	title = {The Analysis of Double Hashing},
	url = {https://doi.org/10.1016/0022-0000(78)90046-6},
	volume = 16,
	month = APR,
	year = 1978,
	Bdsk-Url-1 = {https://doi.org/10.1016/0022-0000(78)90046-6}}

@article{VanWykVi86,
	author = {Christopher J. {Van Wyk} and Jeffrey Scott Vitter},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/journals/algorithmica/WykV86.bib},
	doi = {10.1007/BF01840434},
	journal = {Algorithmica},
	volume = 1,
	number = {1--4},
	pages = {17--29},
	timestamp = {Wed, 17 May 2017 14:25:12 +0200},
	title = {The Complexity of Hashing with Lazy Deletion},
	month = NOV,
	year = 1986,
	Bdsk-Url-1 = {https://doi.org/10.1007/BF01840434}}

@article{KenyonVi91,
	author = {Claire M. Kenyon and Jeffrey Scott Vitter},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/journals/algorithmica/KenyonV91.bib},
	doi = {10.1007/BF01759063},
	journal = {Algorithmica},
	number = 4,
	pages = {597--619},
	timestamp = {Wed, 17 May 2017 14:25:14 +0200},
	title = {Maximum Queue Size and Hashing with Lazy Deletion},
	url = {https://doi.org/10.1007/BF01759063},
	volume = 6,
	month = jun,
	year = 1991,
	Bdsk-Url-1 = {https://doi.org/10.1007/BF01759063}}

@article{Brent73,
	author = {Richard P. Brent},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/journals/cacm/Brent73.bib},
	doi = {10.1145/361952.361964},
	journal = {\bibcacm},
	month = FEB,
	number = {2},
	pages = {105--109},
	timestamp = {Wed, 14 Nov 2018 10:22:33 +0100},
	title = {Reducing the Retrieval Time of Scatter Storage Techniques},
	volume = {16},
	year = {1973},
	Bdsk-Url-1 = {https://doi.org/10.1145/361952.361964}}

@inproceedings{GuibasSz76,
        bibnte = {Cite GuibasSz78 instead},
	author = {Leonidas J. Guibas and Endre Szemer{\'{e}}di},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/conf/stoc/GuibasS76.bib},
	booktitle = {Proceedings of the 8th Annual {ACM} Symposium on Theory of Computing (STOC'76)},
	doi = {10.1145/800113.803647},
	editor-skip = {Ashok K. Chandra and Detlef Wotschke and Emily P. Friedman and Michael A. Harrison},
	pages = {187--191},
	timestamp = {Tue, 06 Nov 2018 11:07:04 +0100},
	title = {The Analysis of Double Hashing (Extended Abstract)},
	url = {https://doi.org/10.1145/800113.803647},
	year = {1976},
	Bdsk-Url-1 = {https://doi.org/10.1145/800113.803647}}

@article{LuekerMo93,
	author = {George S. Lueker and Mariko Molodowitch},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/journals/combinatorica/LuekerM93.bib},
	doi = {10.1007/BF01202791},
	journal = {Combinatorica},
	number = 1,
	pages = {83--96},
	timestamp = {Wed, 22 Jul 2020 22:02:30 +0200},
	title = {More Analysis of Double Hashing},
	url = {https://doi.org/10.1007/BF01202791},
	volume = 13,
	month = MAR,
	year = 1993,
	Bdsk-Url-1 = {https://doi.org/10.1007/BF01202791}}

@inproceedings{LuekerMo88,
	author = {George S. Lueker and Mariko Molodowitch},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/conf/stoc/LuekerM88.bib},
	booktitle = {Proceedings of the 20th Annual {ACM} Symposium on Theory of Computing (STOC'88)},
	doi = {10.1145/62212.62246},
	editor-skip = {Janos Simon},
	pages = {354--359},
	timestamp = {Tue, 06 Nov 2018 11:07:04 +0100},
	title = {More Analysis of Double Hashing},
	url = {https://doi.org/10.1145/62212.62246},
	month = {2--4~} # MAY,
	year = 1988,
	address = {Chicago, Illinois, USA},
	Bdsk-Url-1 = {https://doi.org/10.1145/62212.62246}}

@misc{Mitzenmacher2015analysis,
	archiveprefix = {arXiv},
	author = {Michael Mitzenmacher},
	eprint = {1503.00658},
	primaryclass = {cs.DS},
	title = {More Analysis of Double Hashing for Balanced Allocations},
	year = {2015}}

@inproceedings{Mitzenmacher16-robinhood,
	author = {Michael Mitzenmacher},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/conf/analco/Mitzenmacher16a.bib},
	booktitle = {Proceedings of the Thirteenth Workshop on Analytic Algorithmics and Combinatorics (ANALCO)},
	date-modified = {2021-05-23 12:40:11 -0400},
	doi = {10.1137/1.9781611974324.2},
	pages = {10--24},
	timestamp = {Tue, 23 May 2017 01:10:31 +0200},
	title = {A New Approach to Analyzing {Robin Hood} Hashing},
	year = {2016},
	address = {Arlington, Virginia, USA},
	Bdsk-Url-1 = {https://doi.org/10.1137/1.9781611974324.2}}

@inproceedings{Mitzenmacher16-doublehashing,
	author = {Michael Mitzenmacher},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/conf/analco/Mitzenmacher16.bib},
	booktitle = {Proceedings of the Thirteenth Workshop on Analytic Algorithmics and Combinatorics (ANALCO)},
	date-modified = {2021-05-23 12:40:36 -0400},
	doi = {10.1137/1.9781611974324.1},
	editor-skip = {James Allen Fill and Mark Daniel Ward},
	pages = {1--9},
	timestamp = {Tue, 23 May 2017 01:10:31 +0200},
	title = {More Analysis of Double Hashing for Balanced Allocations},
	url = {https://doi.org/10.1137/1.9781611974324.1},
	year = {2016},
        address = {Arlington, Virginia, USA},
	Bdsk-Url-1 = {https://doi.org/10.1137/1.9781611974324.1}}

@article{JansonVi16,
	author = {Svante Janson and Alfredo Viola},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/journals/algorithmica/JansonV16.bib},
	doi = {10.1007/s00453-015-0111-x},
	journal = {Algorithmica},
	number = 4,
	pages = {724--781},
	timestamp = {Wed, 17 May 2017 14:25:11 +0200},
	title = {A Unified Approach to Linear Probing Hashing with Buckets},
	url = {https://doi.org/10.1007/s00453-015-0111-x},
	volume = 75,
	month = AUG,
	year = 2016,
	Bdsk-Url-1 = {https://doi.org/10.1007/s00453-015-0111-x}}

@inproceedings{SunHuJi17,
	author = {Yuanyuan Sun and Yu Hua and Song Jiang and Qiuyu Li and Shunde Cao and Pengfei Zuo},
	booktitle = {Proceedings of the 2017 USENIX Annual Technical Conference (USENIX ATC '17)},
	isbn = {978-1-931971-38-6},
	month = jul,
	pages = {553--565},
	title = {{SmartCuckoo}: A Fast and Cost-Efficient Hashing Index Scheme for Cloud Storage Systems},
	url = {https://www.usenix.org/conference/atc17/technical-sessions/presentation/sun},
	year = 2017,
	address = {Santa Clara, California, USA},
	Bdsk-Url-1 = {https://www.usenix.org/conference/atc17/technical-sessions/presentation/sun}}

@inproceedings{SkarlatosKoAp20,
	abstract = {The unprecedented growth in the memory needs of emerging memory-intensive workloads has made virtual memory translation a major performance bottleneck. To address this problem, this paper introduces Elastic Cuckoo Page Tables, a novel page table design that transforms the sequential pointer-chasing operation used by conventional multi-level radix page tables into fully-parallel look-ups. The resulting design harvests, for the first time, the benefits of memory level parallelism for address translation. Elastic cuckoo page tables use Elastic Cuckoo Hashing, a novel extension of cuckoo hashing that supports efficient page table resizing. Elastic cuckoo page tables efficiently resolve hash collisions, provide process-private page tables, support multiple page sizes and page sharing among processes, and dynamically adapt page table sizes to meet application requirements. We evaluate elastic cuckoo page tables with full-system simulations of an 8-core processor using a set of graph analytics, bioinformatics, HPC, and system workloads. Elastic cuckoo page tables reduce the address translation overhead by an average of 41% over conventional radix page tables. The result is a 3-18% speed-up in application execution.},
	author = {Skarlatos, Dimitrios and Kokolis, Apostolos and Xu, Tianyin and Torrellas, Josep},
	booktitle = {Proceedings of the Twenty-Fifth International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS)},
	doi = {10.1145/3373376.3378493},
	isbn = {9781450371025},
	keywords = {virtual memory, page tables, cuckoo hashing},
	numpages = {16},
	pages = {1093--1108},
	title = {Elastic Cuckoo Page Tables: Rethinking Virtual Memory Translation for Parallelism},
	url = {https://doi.org/10.1145/3373376.3378493},
	year = {2020},
	Bdsk-Url-1 = {https://doi.org/10.1145/3373376.3378493}}

@article{PontarelliRe16,
	author = {Pontarelli, Salvatore and Reviriego, Pedro},
	doi = {10.1109/MIC.2016.55},
	journal = {IEEE Internet Computing},
	number = 4,
	pages = {46--53},
	title = {Cuckoo Cache: A Technique to Improve Flow Monitoring Throughput},
	volume = 20,
	month = JUL # {--} # AUG,
	year = 2016,
	Bdsk-Url-1 = {https://doi.org/10.1109/MIC.2016.55}}

@article{FotakisPaSa05,
	author = {Dimitris Fotakis and Rasmus Pagh and Peter Sanders and Paul G. Spirakis},
	bibsource = {dblp computer science bibliography, http://dblp.org},
	biburl = {http://dblp.uni-trier.de/rec/bib/journals/mst/FotakisPSS05},
	doi = {10.1007/s00224-004-1195-x},
	journal = {Theory of Computing Systems},
	month = DEC,
	number = {2},
	pages = {229--248},
	timestamp = {Tue, 15 Nov 2005 09:23:01 +0100},
	title = {Space Efficient Hash Tables with Worst Case Constant Access Time},
	volume = {38},
	year = {2005},
	Bdsk-Url-1 = {https://doi.org/10.1007/s00224-004-1195-x}}

@article{DietzfelbingerWe07,
	author = {Martin Dietzfelbinger and Christoph Weidling},
	bibsource = {dblp computer science bibliography, http://dblp.org},
	biburl = {http://dblp.uni-trier.de/rec/bib/journals/tcs/DietzfelbingerW07},
	doi = {10.1016/j.tcs.2007.02.054},
	journal = {Theoretical Computer Science},
	month = JUN,
	number = {1-2},
	pages = {47--68},
	timestamp = {Mon, 11 Jun 2007 13:48:16 +0200},
	title = {Balanced allocation and dictionaries with tightly packed constant size bins},
	volume = 380,
	year = 2007,
	Bdsk-Url-1 = {https://doi.org/10.1016/j.tcs.2007.02.054}}

@inproceedings{DietzfelbingerGoMi10,
	author = {Martin Dietzfelbinger and Andreas Goerdt and Michael Mitzenmacher and Andrea Montanari and Rasmus Pagh and Michael Rink},
	booktitle = {37th International Colloquium on Automata, Languages and Programming (ICALP 2010)},
	date-added = {2021-05-25 14:03:39 -0400},
	date-modified = {2021-05-25 14:03:39 -0400},
	pages = {213--225},
	title = {Tight Thresholds for Cuckoo Hashing via {XORSAT}},
	year = {2010}}

@inproceedings{Dietzfelbinger96,
	author = {Martin Dietzfelbinger},
	booktitle = {Proceedings 13th Annual Symposium on Theoretical Aspects of Computer Science (STACS)},
	date-added = {2021-05-25 14:03:39 -0400},
	date-modified = {2021-05-25 14:03:39 -0400},
	pages = {569--580},
	title = {Universal Hashing and $k$-Wise Independent Random Variables via Integer Arithmetic without Primes},
	year = {1996}}

@inproceedings{DietzfelbingerSc09,
	author = {Martin Dietzfelbinger and Ulf Schellbach},
	booktitle = {Proceedings of the 20th ACM-SIAM Symposium on Discrete Algorithms ({SODA 2009})},
	date-added = {2021-05-25 14:03:39 -0400},
	date-modified = {2021-05-25 14:03:39 -0400},
	pages = {795--804},
	title = {On Risks of Using Cuckoo Hashing with Simple Universal Hash Classes},
	doi = {10.5555/1496770.1496857},
	address = {New York, New York, USA},
	month = {4--6~} # JAN,
	year = {2009}}

@inproceedings{BlellochGo07,
	author = {Guy E. Blelloch and Daniel Golovin},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/conf/focs/BlellochG07.bib},
	booktitle = {Proceedings of the 48th Annual {IEEE} Symposium on Foundations of Computer Science (FOCS 2007)},
	doi = {10.1109/FOCS.2007.36},
	pages = {272--282},
	timestamp = {Wed, 16 Oct 2019 14:14:54 +0200},
	title = {Strongly History-Independent Hashing with Applications},
	url = {https://doi.org/10.1109/FOCS.2007.36},
	month = {21--23~} # OCT,
	year = {2007},
	address = {Providence, Rhode Island, USA},
	Bdsk-Url-1 = {https://doi.org/10.1109/FOCS.2007.36}}

@inproceedings{DietzfelbingerHe90,
	author = {Martin Dietzfelbinger and Friedhelm Meyer auf der Heide},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/conf/icalp/DietzfelbingerH90.bib},
	booktitle = {Proceedings of the Automata, Languages and Programming, 17th International Colloquium (ICALP 1990)},
	doi = {10.1007/BFb0032018},
	pages = {6--19},
	series = {Lecture Notes in Computer Science},
	timestamp = {Tue, 14 May 2019 10:00:44 +0200},
	title = {A New Universal Class of Hash Functions and Dynamic Hashing in Real Time},
	url = {https://doi.org/10.1007/BFb0032018},
	volume = 443,
	month = {16--20~} # JUL,
	year = 1990,
	address = {Warwick, United Kingdom},
	Bdsk-Url-1 = {https://doi.org/10.1007/BFb0032018}}

@inproceedings{FredmanKoSz82,
	author = {Fredman, Michael L. and Komlos, Janos and Szemeredi, Endre},
	booktitle = {Proceedings of the 23rd Annual Symposium on Foundations of Computer Science (FOCS'82)},
	numpages = {5},
	pages = {165--169},
	title = {Storing a Sparse Table with {$O(1)$} Worst Case Access Time},
	doi = {10.1109/SFCS.1982.39},
	month = {3--5~} # NOV,
	year = {1982}}

@inproceedings{DemaineMePa06,
	author = {Erik D. Demaine and Friedhelm {Meyer auf der Heide} and Rasmus Pagh and Mihai P{\v a}tra{\c{s}}cu},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/conf/latin/DemaineHPP06.bib},
	booktitle = {Proceedings of the 7th Latin American Symposium on Theoretical Informatics (LATIN 2006)},
	doi = {10.1007/11682462_34},
	pages = {349--361},
	timestamp = {Tue, 14 May 2019 10:00:53 +0200},
	title = {De Dictionariis Dynamicis Pauco Spatio Utentibus (\emph{lat.} On Dynamic Dictionaries Using Little Space)},
        series = {Lecture Notes in Computer Science},
	volume = {3887},
	address = {Valdiva, Chile},
	month = {20--24~} # MAR,
	year = {2006},
	Bdsk-Url-1 = {https://doi.org/10.1007/11682462%5C_34}}

@inproceedings{ArbitmanNaSe09,
	author = {Arbitman, Yuriy and Naor, Moni and Segev, Gil},
	booktitle = {Proceedings of the 36th International Colloquium on Automata, Languages and Programming (ICALP 2009)},
	isbn = {978-3-642-02927-1},
	pages = {107--118},
	title = {De-amortized Cuckoo Hashing: Provable Worst-Case Performance and Experimental Results},
	year = {2009},
	doi = {10.1007/978-3-642-02927-1_11},
        series = {Lecture Notes in Computer Science},
	volume = 5555}

@inproceedings{LiuYiYu20,
	author = {Mingmou Liu and Yitong Yin and Huacheng Yu},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/conf/icalp/LiuYY20.bib},
	booktitle = {Proceedings 47th International Colloquium on Automata, Languages, and Programming (ICALP 2020)},
	doi = {10.4230/LIPIcs.ICALP.2020.79},
	editor-skip = {Artur Czumaj and Anuj Dawar and Emanuela Merelli},
	pages = {79:1--79:19},
        series = {Leibniz International Proceedings in Informatics (LIPIcs)},
	timestamp = {Mon, 21 Dec 2020 13:23:22 +0100},
	title = {Succinct Filters for Sets of Unknown Sizes},
	url = {https://doi.org/10.4230/LIPIcs.ICALP.2020.79},
	address = {Saarbr\"ucken, Germany},
	volume = 168,
	month = {8--11~} # JUL,
	year = 2020,
	Bdsk-Url-1 = {https://doi.org/10.4230/LIPIcs.ICALP.2020.79}}

@inproceedings{DietzfelbingerKaMe88,
	author = {Martin Dietzfelbinger and Anna R. Karlin and Kurt Mehlhorn and Friedhelm {Meyer auf der Heide} and Hans Rohnert and Robert Endre Tarjan},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/conf/focs/DietzfelbingerKMHRT88.bib},
	booktitle = {Proceedings 29th Annual Symposium on Foundations of Computer Science (FOCS'88)},
	doi = {10.1109/SFCS.1988.21968},
	pages = {524--531},
	timestamp = {Wed, 16 Oct 2019 14:14:54 +0200},
	title = {Dynamic Perfect Hashing: Upper and Lower Bounds},
	year = {1988},
	month = {24--26~} # OCT,
	address = {White Plains, New York, USA},
	Bdsk-Url-1 = {https://doi.org/10.1109/SFCS.1988.21968}}

@inproceedings{Sundar91,
	author = {Sundar, Rajamani},
	booktitle = {Proceedings 32nd Annual Symposium of Foundations of Computer Science},
	doi = {10.1109/SFCS.1991.185427},
	pages = {612-621},
	title = {A Lower Bound for the Dictionary Problem Under a Hashing Model},
	month = OCT,
	year = {1991},
	address = {San Juan, Puerto Rico, USA},
	Bdsk-Url-1 = {https://doi.org/10.1109/SFCS.1991.185427}}

@article{HagerupMiPa01,
	abstract = {It is shown that a static dictionary that offers constant-time access to n elements with w-bit keys and occupies O(n) words of memory can be constructed deterministically in O(nlogn) time on a unit-cost RAM with word length w and a standard instruction set including multiplication. Whereas a randomized construction working in linear expected time was known, the running time of the best previous deterministic algorithm was {\OE}{\copyright}(n2). Using a standard dynamization technique, the first deterministic dynamic dictionary with constant lookup time and sublinear update time is derived. The new algorithms are weakly nonuniform; i.e., they require access to a fixed number of precomputed constants dependent on w. The main technical tools employed are unit-cost error-correcting codes, word parallelism, and derandomization using conditional expectations.},
	author = {Torben Hagerup and Peter Bro Miltersen and Rasmus Pagh},
	doi = {https://doi.org/10.1006/jagm.2001.1171},
	issn = {0196-6774},
	journal = {Journal of Algorithms},
	keywords = {data structures, information retrieval, deterministic dictionaries, searching, perfect hashing, error-correcting codes, word parallelism, derandomization},
	number = 1,
	pages = {69-85},
	title = {Deterministic Dictionaries},
	url-skip = {https://www.sciencedirect.com/science/article/pii/S019667740191171X},
	volume = 41,
	month = OCT,
	year = 2001,
	Bdsk-Url-1 = {https://www.sciencedirect.com/science/article/pii/S019667740191171X},
	Bdsk-Url-2 = {https://doi.org/10.1006/jagm.2001.1171}}

@article{Ruzic08,
	abstract = {We present a new analysis of the well-known family of multiplicative hash functions, and improved deterministic algorithms for selecting ‚{\"A}{\'u}good‚{\"A}{\`u} hash functions. The main motivation is realization of deterministic dictionaries with fast lookups and reasonably fast updates. The model of computation is the Word RAM, and it is assumed that the machine word-size matches the size of keys in bits. Many of the modern solutions to the dictionary problem are weakly nonuniform, that is, they require a number of constants to be computed at compile time for the stated time bounds to hold. The currently fastest deterministic dictionary uses constants not known to be computable in polynomial time. In contrast, our dictionaries do not require any special constants or instructions, and running times are independent of word (and key) length. Our family of dynamic dictionaries achieves a performance of the following type: lookups in time O(t) and updates in amortized time O(n1/t), for an appropriate parameter function t. Update procedures require division, whereas searching uses multiplication only.},
	articleno = 1,
	author = {Ru\v{z}i\'{c}, Milan},
	doi = {10.1145/1328911.1328912},
	issn = {1549-6325},
	issue_date = {March 2008},
	journal = {ACM Transactions on Algorithms},
	keywords = {perfect hashing, Deterministic algorithms},
	month = mar,
	number = 1,
	numpages = 23,
	title = {Uniform Deterministic Dictionaries},
	volume = 4,
	year = 2008,
	pages = {1--23},
	Bdsk-Url-1 = {https://doi.org/10.1145/1328911.1328912}}

@inproceedings{Pagh00,
	address = {USA},
	author = {Pagh, Rasmus},
	booktitle = {Proceedings of the 11th Annual ACM-SIAM Symposium on Discrete Algorithms (SODA 2000)},
	isbn = {0898714532},
	location = {San Francisco, California, USA},
	numpages = {7},
	pages = {487-493},
	title = {Faster Deterministic Dictionaries},
	doi = {10.5555/338219.338595},
	month = FEB,
	year = {2000}}

@inproceedings{PatrascuTh14,
	abstract = {We present a data structure representing a dynamic set S of w-bit integers on a w-bit word RAM. With |S| = n and w ‚{\^a}* log n and space O(n), we support the following standard operations in O(log n/log w) time: insert(x) sets S = S + {x}. delete(x) sets S = S {x}. predecessor(x) returns max{y ‚{\`a}{\`a} S | y &lt; x}. rank(x) returns #{y ‚{\`a}{\`a} S | y &lt; x}. select (i) returns y ‚{\`a}{\`a} S with rank (y) = i, if any. Our O(log n/log w) bound is optimal for dynamic rank and select, matching a lower bound of Fredman and Saks [STOC'89]. When the word length is large, our time bound is also optimal for dynamic predecessor, matching a static lower bound of Beame and Fich [STOC'99] whenever log n/log w = O(log w/log log w). Technically, the most interesting aspect of our data structure is that it supports all the above operations in constant time for sets of size n = w O(1). This resolves a main open problem of Ajtai, Komlos, and Fredman [FOCS{\^O}¨{\AA}f83]. Ajtai et al. presented such a data structure in Yao{\^O}¨{\AA}fs abstract cell-probe model with w-bit cells/words, but pointed out that the functions used could not be implemented. As a partial solution to the problem, Fredman and Willard [STOC{\^O}¨{\AA}f90] introduced a fusion node that could handle queries in constant time, but used polynomial time on the updates. We call our small set data structure a dynamic fusion node as it does both queries and updates in constant time.},
	address = {Philadelphia, Pennsylvania, USA},
	author = {P{\v a}tra{\c{s}}cu, Mihai and Thorup, Mikkel},
	booktitle = {Proceedings 55th Annual Symposium on Foundations of Computer Science (FOCS 2014)},
	doi = {10.1109/FOCS.2014.26},
	isbn = {9781479965175},
	keywords = {dynamic data structures, integer data structures},
	numpages = {10},
	pages = {166--175},
	title = {Dynamic Integer Sets with Optimal Rank, Select, and Predecessor Search},
	month = {18--21~} # OCT,
	year = {2014},
	Bdsk-Url-1 = {https://doi.org/10.1109/FOCS.2014.26}}

@inproceedings{NaorSeWi08,
	author = {Moni Naor and Gil Segev and Udi Wieder},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/conf/icalp/NaorSW08.bib},
	booktitle = {Proceedings 35th International Colloquium on Automata, Languages, and Programming, (ICALP 2008)},
	address ={Reykjavik, Iceland},
	month = {7--11~} # JUL,
	doi = {10.1007/978-3-540-70583-3_51},
	pages = {631--642},
	series = {Lecture Notes in Computer Science},
	timestamp = {Fri, 27 Mar 2020 09:02:59 +0100},
	title = {History-Independent Cuckoo Hashing},
	volume = 5126,
	year = 2008,
	Bdsk-Url-1 = {https://doi.org/10.1007/978-3-540-70583-3%5C_51}}

@inproceedings{NaorTe01,
	author = {Moni Naor and Vanessa Teague},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/conf/stoc/NaorT01.bib},
	booktitle = {Proceedings on 33rd Annual {ACM} Symposium on Theory of Computing (STOC'01)},
	doi = {10.1145/380752.380844},
	editor-skip = {Jeffrey Scott Vitter and Paul G. Spirakis and Mihalis Yannakakis},
	pages = {492--501},
	timestamp = {Tue, 06 Nov 2018 11:07:05 +0100},
	title = {Anti-persistence: History Independent Data Structures},
	month = {6--8~} # JUL,
	year = {2001},
	address = {Hersonissos, Greece},
	Bdsk-Url-1 = {https://doi.org/10.1145/380752.380844}}

@inproceedings{BenderBeJo16,
	annote = {C78},
	author = {Michael A. Bender and Jonathan W. Berry and Rob Johnson and Thomas M. Kroeger and Samuel McCauley and Cynthia A. Phillips and Bertrand Simon and Shikha Singh and David Zage},
	booktitle = {Proceedings of the 35th ACM SIGMOD-SIGACT-SIGAI Symposium on Principles of Database Systems (PODS'16)},
	date-added = {2016-03-12 13:46:52 +0000},
	date-modified = {2016-06-29 18:49:12 +0000},
	month = {26~} # JUN # {--1~} # JUL,
	pages = {289-302},
	title = {Anti-Persistence on Persistent Storage: History-Independent Sparse Tables and Dictionaries},
	year = 2016,
	address = {San Fransisco, California, USA},
	doi = {10.1145/2902251.2902276}}

@inproceedings{MitzenmacherVa08,
        bibnote = "Vadhan has no middle initial in the paper",
	author = {Michael Mitzenmacher and Salil Vadhan},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/conf/soda/MitzenmacherV08.bib},
	booktitle = {Proceedings of the 19th Annual {ACM-SIAM} Symposium on Discrete Algorithms (SODA 2008)},
	pages = {746--755},
	timestamp = {Fri, 07 Dec 2012 17:02:09 +0100},
	title = {Why Simple Hash Functions Work: Exploiting The Entropy in a Data Stream},
	month = {20--22~} # JAN,
	year = 2008,
	address = {San Francisco, California, USA},
	doi = {doi/10.5555/1347082.1347164},
	Bdsk-Url-1 = {http://dl.acm.org/citation.cfm?id=1347082.1347164}}

@inproceedings{PaghWeYi10,
	abstract = {The hash table, especially its external memory version, is one of the most important index structures in large databases. Assuming a truly random hash function, it is known that in a standard external hash table with block size b, searching for a particular key only takes expected average t_q=1+1/2{\OE}{\copyright}(b) disk accesses for any load factor {\OE}$\pm$ bounded away from $1$. However, such near-perfect performance is achieved only when b is known and the hash table is particularly tuned for working with such a blocking. In this paper we study if it is possible to build a cache-oblivious hash table that works well with any blocking. Such a hash table will automatically perform well across all levels of the memory hierarchy and does not need any hardware-specific tuning, an important feature in autonomous databases.We first show that linear probing, a classical collision resolution strategy for hash tables, can be easily made cache-oblivious but it only achieves t_q = 1 + O({\OE}$\pm$b). Then we demonstrate that it is possible to obtain t_q = 1 + 1/2{\OE}{\copyright}(b), thus matching the cache-aware bound, if the following two conditions hold: (a) b is a power of 2; and (b) every block starts at a memory address divisible by b. Both conditions hold on a real machine, although they are not stated in the cache-oblivious model. Interestingly, we also show that neither condition is dispensable: if either of them is removed, the best obtainable bound is t_q=1+O({\OE}$\pm$b), which is exactly what linear probing achieves.},
	author = {Pagh, Rasmus and Wei, Zhewei and Yi, Ke and Zhang, Qin},
	booktitle = {Proceedings of the 29th ACM SIGMOD-SIGACT-SIGART Symposium on Principles of Database Systems (PODS'10)},
	address = {Indianpolis, Indiana, USA},
	doi = {10.1145/1807085.1807124},
	isbn = 9781450300339,
	keywords = {hashing, cache-oblivious algorithms},
	numpages = 8,
	pages = {297-304},
	title = {Cache-Oblivious Hashing},
	month = {6--11~} # JUN,
	year = 2010,
}

@article{PaghWeYi14,
	author = {Rasmus Pagh and Zhewei Wei and Ke Yi and Qin Zhang},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/journals/algorithmica/PaghWYZ14.bib},
	doi = {10.1007/s00453-013-9763-6},
	journal = {Algorithmica},
	number = 4,
	pages = {864--883},
	timestamp = {Tue, 21 May 2019 07:19:14 +0200},
	title = {Cache-Oblivious Hashing},
	url = {https://doi.org/10.1007/s00453-013-9763-6},
	volume = 69,
	year = 2014,
	Bdsk-Url-1 = {https://doi.org/10.1007/s00453-013-9763-6}}

@inproceedings{ChanGuLi17,
	author = {T.{-}H. Hubert Chan and Yue Guo and Wei{-}Kai Lin and Elaine Shi},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/conf/asiacrypt/ChanGLS17.bib},
	booktitle = {Advances in Cryptology --- ASIACRYPT 2017 --- 23rd International Conference on the Theory and Applications of Cryptology and Information Security},
	doi = {10.1007/978-3-319-70694-8_23},
	pages = {660--690},
	series = {Lecture Notes in Computer Science},
	timestamp = {Tue, 14 May 2019 10:00:40 +0200},
	title = {Oblivious Hashing Revisited, and Applications to Asymptotically Efficient {ORAM} and {OPRAM}},
	url = {https://doi.org/10.1007/978-3-319-70694-8_23},
	volume = 10624,
	month = {3--7~} # DEC,
	year = 2017,
	Bdsk-Url-1 = {https://doi.org/10.1007/978-3-319-70694-8%5C_23}}

@inproceedings{YuqunVeCa02,
	abstract = {We describe a novel software verification primitive called Oblivious Hashing. Unlike previous techniques that mainly verify the static shape of code, this primitive allows implicit computation of a hash value based on the actual execution (i.e., space-time history of computation) of the code. We also discuss its applications in local software tamper resistance and remote code authentication.},
	author = {Chen, Yuqun and Venkatesan, Ramarathnam and Cary, Matthew and Pang, Ruoming and Sinha, Saurabh and Jakubowski, Mariusz H.},
	booktitle = {Revised Papers from the 5th International Workshop on Information Hiding (IH'02)},
	isbn = {3540004211},
	numpages = {15},
	pages = {400--414},
	title = {Oblivious Hashing: A Stealthy Software Integrity Verification Primitive},
	month = {7--9~} # OCT,
	year = {2002},
	address = {Noordwijkerhout, The Netherlands},
	doi={10.5555/647598.732027}}

@article{PatrascuTh12,
	abstract = {Randomized algorithms are often enjoyed for their simplicity, but the hash functions used to yield the desired theoretical guarantees are often neither simple nor practical. Here we show that the simplest possible tabulation hashing provides unexpectedly strong guarantees.The scheme itself dates back to Zobrist in 1970 who used it for game playing programs. Keys are viewed as consisting of c characters. We initialize c tables H1, ..., Hc mapping characters to random hash codes. A key x‚{\"A}{\^a}=‚{\"A}{\^a}(x1, ..., xc) is hashed to H1[x1]‚{\"A}{\^a}‚{\"a}{\"\i}‚{\"A}{\^a}‚{\~a}{\O}‚{\"A}{\^a}‚{\"a}{\"\i}‚{\"A}{\^a}Hc[xc], where ‚{\"a}{\"\i} denotes bit-wise exclusive-or.While this scheme is not even 4-independent, we show that it provides many of the guarantees that are normally obtained via higher independence, for example, Chernoff-type concentration, min-wise hashing for estimating set intersection, and cuckoo hashing.},
	articleno = 14,
	author = {P{\v a}tra{\c{s}}cu, Mihai and Thorup, Mikkel},
	doi = {10.1145/2220357.2220361},
	issn = {0004-5411},
	issue_date = {June 2012},
	journal = {Journal of the ACM (JACM)},
	keywords = {tabulation, Hashing},
	month = jun,
	number = 3,
        pages = {14:1--14:50},
	numpages = 50,
	title = {The Power of Simple Tabulation Hashing},
	volume = 59,
	year = 2012,
	Bdsk-Url-1 = {https://doi.org/10.1145/2220357.2220361}}

@article{PaghPaRu11,
	author = {Anna Pagh and Rasmus Pagh and Milan Ru\v{z}i{\'c}},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/journals/siamrev/PaghPR11.bib},
	doi = {10.1137/110827831},
	journal = {{SIAM} Review},
	number = {3},
	pages = {547--558},
	timestamp = {Tue, 29 Sep 2020 10:58:38 +0200},
	title = {Linear Probing with 5-wise Independence},
	url = {https://doi.org/10.1137/110827831},
	volume = {53},
	year = {2011},
	Bdsk-Url-1 = {https://doi.org/10.1137/110827831}}

@inproceedings{Thorup09,
	author = {Mikkel Thorup},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/conf/soda/Thorup09.bib},
	booktitle = {Proceedings of the 20th Annual {ACM-SIAM} Symposium on Discrete Algorithms, (SODA 2009)},
	address = {New York, New York, USA},
	dont-include-editor = {Claire Mathieu},
	pages = {655--664},
	timestamp = {Tue, 02 Feb 2021 17:07:33 +0100},
	title = {String Hashing for Linear Probing},
	month = JAN,
	year = 2009,
	doi = {10.1137/1.9781611973068.72},
	Bdsk-Url-1 = {http://dl.acm.org/citation.cfm?id=1496770.1496842}}

@inproceedings{KirschMi06,
	abstract = {A standard technique from the hashing literature is to use two hash functions h1(x) and h2(x) to simulate additional hash functions of the form gi(x) = h1(x) + ih2(x). We demonstrate that this technique can be usefully applied to Bloom filters and related data structures. Specifically, only two hash functions are necessary to effectively implement a Bloom filter without any loss in the asymptotic false positive probability. This leads to less computation and potentially less need for randomness in practice.},
	address = {Berlin, Heidelberg},
	author = {Kirsch, Adam and Mitzenmacher, Michael},
	booktitle = {Algorithms -- ESA 2006},
	editor = {Azar, Yossi and Erlebach, Thomas},
	isbn = {978-3-540-38876-0},
	pages = {456--467},
	publisher = {Springer Berlin Heidelberg},
	title = {Less Hashing, Same Performance: Building a Better Bloom Filter},
	year = {2006}}

@inproceedings{PandeyCoDu21,
	annote = {C104},
	author = {Prashant Pandey and Alex Conway and Joe Durie and Michael A. Bender and Martin Farach-Colton and Rob Johnson},
	booktitle = {Proceedings of the 2021 ACM SIGMOD International Conference on Management of Data (SIGMOD'21)},
	date-added = {2021-02-15 09:25:07 -0500},
	date-modified = {2021-02-15 09:35:00 -0500},
	month = {20--25~} # JUN,
	note = {To appear},
	title = {Vector Quotient Filters: Overcoming the Time/Space Trade-Off in Filter Design},
	year = 2021}

@inproceedings{PaghRaRa05,
	abstract = {This paper considers space-efficient data structures for storing an approximation S' to a set S such that S ‚{\"a}{\"U} S' and any element not in S belongs to S' with probability at most ‚{\`a}{\`a}. The Bloom filter data structure, solving this problem, has found widespread use. Our main result is a new RAM data structure that improves Bloom filters in several ways:‚{\"A}¢ The time for looking up an element in S' is O(1), independent of ‚{\`a}{\`a}.‚{\"A}¢ The space usage is within a lower order term of the lower bound.‚{\"A}¢ The data structure uses explicit hash function families.‚{\"A}¢ The data structure supports insertions and deletions on S in amortized expected constant time.The main technical ingredient is a succinct representation of dynamic multisets. We also consider three recent generalizations of Bloom filters.},
	address = {Vancouver, British Columbia, Canada},
	author = {Pagh, Anna and Pagh, Rasmus and Rao, S. Srinivasa},
	booktitle = {Proceedings of the 16th Annual ACM-SIAM Symposium on Discrete Algorithms (SODA 2005)},
	isbn = 0898715857,
	location = {Vancouver, British Columbia},
	numpages = 7,
	pages = {823-829},
	title = {An Optimal {B}loom Filter Replacement},
	month = {23--25~} # JAN,
	doi = {10.5555/1070432.1070548},
	year = 2005}

@inproceedings{GeilFO18,
	author = {Geil, Afton and Farach-Colton, Martin and Owens, John D},
	booktitle = {Proceedings of the IEEE International Parallel and Distributed Processing Symposium (IPDPS)},
        address = {Vancouver, British Columbia, Canada},
	pages = {451--462},
	title = {Quotient filters: Approximate membership queries on the {GPU}},
	doi = {10.1109/IPDPS.2018.00055},
	month = {21--25~} # MAY,
	year = {2018}}

@inproceedings{PaghPaRu07,
        bibnote = {No accents on Ruzic in this paper},
	author = {Anna Pagh and Rasmus Pagh and Milan Ruzic},
	booktitle = {Proceedings 39th Annual ACM Symposium on Theory of Computing (STOC'07)},
	pages = {318--327},
	title = {Linear probing with constant independence},
	doi = {10.1145/1250790.1250839},
	address = {San Diego, California, USA},
	month = {11--13~} # JUN,
	year = {2007}}

@article{KirschMi08,
	abstract = {A standard technique from the hashing literature is to use two hash functions h1(x) and h2(x) to simulate additional hash functions of the form gi(x) = h1(x) + ih2(x). We demonstrate that this technique can be usefully applied to Bloom filters and related data structures. Specifically, only two hash functions are necessary to effectively implement a Bloom filter without any loss in the asymptotic false positive probability. This leads to less computation and potentially less need for randomness in practice. ¬{\copyright} 2008 Wiley Periodicals, Inc. Random Struct. Alg., 2008Preliminary versions of this work appeared in [17] and [16].},
	address = {USA},
	author = {Kirsch, Adam and Mitzenmacher, Michael},
	issn = {1042-9832},
	issue_date = {September 2008},
	journal = {Random Struct. Algorithms},
	keywords = {Poisson convergence, double hashing, Bloom filters},
	month = sep,
	number = {2},
	numpages = {32},
	pages = {187-218},
	title = {Less Hashing, Same Performance: Building a Better Bloom Filter},
	volume = {33},
	year = {2008}}

@article{BroderMi03,
	author = {Andrei Z. Broder and Michael Mitzenmacher},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/journals/im/BroderM03.bib},
	doi = {10.1080/15427951.2004.10129096},
	journal = {Internet Mathematics},
	number = 4,
	pages = {485--509},
	timestamp = {Sun, 17 May 2020 00:26:29 +0200},
	title = {Survey: Network Applications of {B}loom Filters: A Survey},
	url = {https://doi.org/10.1080/15427951.2004.10129096},
	volume = 1,
	month = {31~} # DEC,
	year = 2003,
	Bdsk-Url-1 = {https://doi.org/10.1080/15427951.2004.10129096}}

@inproceedings{Larson80,
        bibnot = {Cite Larson82 instead},
	author = {Larson, Per-{\AA}ke},
	booktitle = {VLDB},
	pages = {224--232},
	title = {Linear hashing with partial expansions},
	volume = {6},
	year = {1980}}

@Article{Larson82,
  author = {Larson, Per-{\AA}ke},
  title = 	 {Performance Analysis of Linear Hashing with Partial Expansions},
  journal = 	 {ACM Transactions on Database Systems},
  year = 	 1982,
  volume = 	 7,
  number = 	 4,
  pages = 	 {566--687},
  month = 	 DEC,
  doi =          {10.1145/319758.319763}}

@article{Larson83,
	address = {New York, NY, USA},
	author = {Larson, Per-{\AA}ke},
	doi = {10.1145/2157.322407},
	issn = {0004-5411},
	journal = {Journal of the ACM},
	month = oct,
	number = 4,
	numpages = 15,
	pages = {805--819},
	publisher = {Association for Computing Machinery},
	title = {Analysis of Uniform Hashing},
	url = {https://doi.org/10.1145/2157.322407},
	volume = 30,
	year = 1983,
	Bdsk-Url-1 = {https://doi.org/10.1145/2157.322407}}

@article{Ramakrishna89,
	abstract = {Random probing and uniform hashing are theoretical models of hashing schemes based on open addressing such as double hashing. Larson provided an asymptotic analysis of random probing hashing with multi-record buckets. His analysis was based on the Poisson approximation to the binomial distribution. The problems of obtaining an exact model and analyzing finite random probing hashing was left open with the mention of the difficulties involved. We address these open problems in this paper. Also, the search performance of full hash tables is analyzed.},
	author = {M. V. Ramakrishna},
	doi = {10.1016/0020-0190(89)90073-2},
	issn = {0020-0190},
	journal = {Information Processing Letters},
	keywords = {Performance analysis, double hashing},
	number = {2},
	pages = {83--90},
	title = {Analysis of Random Probing Hashing},
	dont-use-url = {https://www.sciencedirect.com/science/article/pii/0020019089900732},
	volume = {31},
	month = {26~} # APR,
	year = {1989},
	Bdsk-Url-1 = {https://www.sciencedirect.com/science/article/pii/0020019089900732},
	Bdsk-Url-2 = {https://doi.org/10.1016/0020-0190(89)90073-2}}

@article{Thorup17,
	author = {Thorup, Mikkel},
	journal = {\bibcacm},
	number = 7,
	pages = {94--101},
	title = {Fast and Powerful Hashing Using Tabulation},
	volume = 60,
	month = JUL,
	year = 2017,
	doi = {10.1145/3068772}}

@inproceedings{PatrascuTh10,
        author = {P{\v a}tra{\c{s}}cu, Mihai and Thorup, Mikkel},
	booktitle = {Proceedings 37th International Colloquium on Automata, Languages, and Programming (ICALP 2010)},
	organization = {Springer},
	pages = {715--726},
	title = {On the $k$-independence required by linear probing and minwise independence},
        month = "6--10~" # JUL,
	year = {2010},
	address = {Bordeaux, France},
	doi = {10.1007/978-3-642-14165-2_60}}

@misc{AumullerDiWo16,
	author = {Aum{\"u}ller, Martin and Dietzfelbinger, Martin and Woelfel, Philipp},
	howpublished = {\href{https://arxiv.org/abs/1611.00029}{arXiv:1611.00029}},
	title = {A Simple Hash Class with Strong Randomness Properties in Graphs and Hypergraphs},
	month = {31~} # OCT,
	year = {2016}}

@inproceedings{DietzfelbingerWo03,
	author = {Dietzfelbinger, Martin and Woelfel, Philipp},
	booktitle = {Proceedings of the Thirty-Fifth Annual ACM Symposium on Theory of Computing (STOC'03)},
	date-modified = {2021-05-27 15:27:33 -0400},
	pages = {629--638},
	title = {Almost Random Graphs with Simple Hash Functions},
	doi = {10.1145/780542.780634},
	address = {San Diego, California, USA},
	month = {9--11~} # JUN,
	year = {2003}}

@article{AumullerDiWo14,
	author = {Aum{\"u}ller, Martin and Dietzfelbinger, Martin and Woelfel, Philipp},
	journal = {Algorithmica},
	number = 3,
	pages = {428--456},
	publisher = {Springer},
	title = {Explicit and efficient hash families suffice for cuckoo hashing with a stash},
	volume = 70,
	month = NOV,
	year = 2014,
	doi = {10.1007/s00453-013-9840-x}}

@article{cohen2009bounds,
	author = {Cohen, Jeffrey S and Kane, Daniel M},
	journal = {ACM Transactions on Algorithms},
	title = {Bounds on the independence required for cuckoo hashing},
	year = {2009}}

@inproceedings{aamand2018power,
	author = {Aamand, Anders and Knudsen, Mathias B{\ae}k Tejs and Thorup, Mikkel},
	booktitle = {45th International Colloquium on Automata, Languages, and Programming, ICALP 2018},
	title = {Power of d choices with simple tabulation},
	year = {2018}}

@inproceedings{dahlgaard2014approximately,
	author = {Dahlgaard, S{\o}ren and Thorup, Mikkel},
	booktitle = {Scandinavian Workshop on Algorithm Theory},
	organization = {Springer},
	pages = {134--145},
	title = {Approximately minwise independence with twisted tabulation},
	year = {2014}}

@article{fountoulakis2013insertion,
	author = {Fountoulakis, Nikolaos and Panagiotou, Konstantinos and Steger, Angelika},
	journal = {SIAM Journal on Computing},
	number = {6},
	pages = {2156--2181},
	publisher = {SIAM},
	title = {On the insertion time of cuckoo hashing},
	volume = {42},
	year = {2013}}

@inproceedings{panigrahy2005efficient,
	author = {Panigrahy, Rina},
	booktitle = {Proceedings of the Sixteenth Annual ACM-SIAM Symposium on Discrete Algorithms (SODA)},
	pages = {830--839},
	title = {Efficient hashing with lookups in two memory accesses},
	year = {2005}}
